ѕерем Ётотћодуль Ёкспорт, ‘ормаћодул€ Ёкспорт, »дентификаторћодул€ Ёкспорт, ¬идимость‘ормы Ёкспорт, ќбновить—тили Ёкспорт;
ѕерем ƒанные‘ормы, Ќе«акрывать‘орму, «акрытьЅезѕроверок;
ѕерем ќриентаци€Ёкрана;				// текуща€ ориентаци€ экрана, в соответствии с которой расположены все элементы формы
ѕерем –езультат;

ѕерем —прѕечатные‘ормы;
ѕерем —прѕечатные‘ормыќрганизации;
ѕерем ћассивѕечатаемыхƒокументов;	// массив с данными печатаемых документов, структура массива ј:	ј[ключ1] = B, (ключ1 - строковый идентификатор объекта печатаемого документа; B - массив)
									// структура массива B: B["ќбъект"] 		- объект печатаемого документа, тип: составной (объекты документов различных типов)
									// 						B["¬идƒокумента"] 	- вид печатаемого документа, тип: ѕеречисление.¬идыƒокументов
									// 						B["ќтмечен"]		- булево значение, отмечена строка документа в дереве или нет
									//						B["ѕечатные‘ормы"] = — (массив печатных форм документа)
									// структура массива —: —["ќтмечен"] 		- булево значение, отмечена строка печатной формы в дереве или нет
									//						—["ќбъект"] 		- элемент справочника ѕечатные‘ормыƒокументов
									//						—["»м€ѕечатной‘ормы"] - им€ печатной формы
									//						—["ѕредставление"] 	- представление печатной формы
									//						—["„исло опий"] 	- число копий печатной формы															

ѕерем ћассивћакетов;
ѕерем ќбъект;						// объект переданный в модуль на печать
ѕерем  онтекстноећенюƒерева;
ѕерем  онтекстноећеню¬вода оличества;
ѕерем ћодульѕечати;
ѕерем ѕараметры—оединени€;			// Ќастройки соединени€ с принтером
ѕерем ћассивћакетовѕечати;
ѕерем »ндекс“екущегоћакета;
ѕерем ќриентаци€—траницы“екущегоћакета;
ѕерем »детѕечать;
ѕерем »ндекс“екущей опииѕечати;		// номер текущей копии, котора€ будет распечатана
ѕерем „исло опийѕечатной‘ормы;		// общее количество копий, которое будет распечатано дл€ текущего макета
ѕерем ѕропустить—чет‘актуру;
ѕерем ќбъект—ообщение;
ѕерем ƒопѕараметр¬опроса;


/////////////////////////////////////////////////

‘ункци€ ”становить¬идимость онтролов()
	
	‘ормаћодул€["ѕоле¬вода оличествоќтступов"].ѕоказать(Ќ≈ ‘ормаћодул€["фл–аздел€ть—траницы"].ќтмечен);
	
	¬озврат 0;
 онец‘ункции


‘ункци€ ѕриЌажатииЌа‘лажок()
	
	”становить¬идимость онтролов();
	
	¬озврат 0;
 онец‘ункции


‘ункци€ ‘орма«акрываетс€() Ёкспорт				// возвращает 0, если форма не закрываетс€ ѕри¬ыбореќ  и ѕри¬ыбореќтмена
	¬озврат  Ќ≈ Ќе«акрывать‘орму;
 онец‘ункции

ѕроцедура ѕеред¬ыгрузкойћодул€() Ёкспорт		// вызываетс€ ѕри¬ыбореќ  и ѕри¬ыбореќтмена, если форма закрываетс€, а не скрываетс€
	ћодульѕечати.¬ыгрузитьћодуль();
 онецѕроцедуры

ѕроцедура «аполнитьƒанные‘ормы()

	¬ысотаЌадписей  = √лоб. онстанты»нтерфейса["¬ысота" + ѕеречислени€.—тилиЎрифта.ЎрифтЌадпись.ѕредставление()];
	¬ысотаѕол€ 	  	= √лоб. онстанты»нтерфейса["¬ысота" + ѕеречислени€.—тилиЎрифта.Ўрифтѕоле.ѕредставление()];
	¬ысота нопки  	= √лоб. онстанты»нтерфейса["¬ысота" + ѕеречислени€.—тилиЎрифта.Ўрифт нопка.ѕредставление()];
	
	–азмерЎрифта‘л  = √лоб. онстанты»нтерфейса["–азмер" + ѕеречислени€.—тилиЎрифта.ЎрифтЌадпись.ѕредставление()];
	 оличество—имв	= ƒлина—троки(—лов DictCatalogsDialogFormsPageDif);
	Ўирина‘лажка	= √лоб.ѕолучитьЎиринуЌадписи(–азмерЎрифта‘л,  оличество—имв + 5);
	Ўирина“екста	= √лоб.ѕолучитьЎиринуЌадписи(–азмерЎрифта‘л, 10);

	ƒанные‘ормы = Ќеопределено;
	индекс‘ормы = 0;	
	
		данныећассива = Ќеопределено;
		индекс¬ћассиве = 0;
	
		// ‘лажок раздела страниц
		текЁл‘ормы = Ќеопределено;
		текЁл‘ормы["“ип"] = ѕеречислени€.“ипƒанных‘ормы.‘лажок;
		текЁл‘ормы["»м€"] = "–аздел€ть—траницы";
		текЁл‘ормы["Ўирина"] = Ўирина‘лажка;
		текЁл‘ормы["¬ысота"] = ¬ысотаЌадписей;
		текЁл‘ормы["ѕредставление"] = —лов DictCatalogsDialogFormsPageDif;
		индекс¬ћассиве = индекс¬ћассиве + 1;
		данныећассива[индекс¬ћассиве] = текЁл‘ормы;		
		
		// ѕоле количества отступов
		текЁл‘ормы = Ќеопределено;
		текЁл‘ормы["“ип"] = ѕеречислени€.“ипƒанных‘ормы.ѕоле¬вода;
		текЁл‘ормы["»м€"] = " оличествоќтступов";
		текЁл‘ормы["Ўирина"] = Ўирина“екста;
		текЁл‘ормы["¬ысота"] = ¬ысотаѕол€;
		индекс¬ћассиве = индекс¬ћассиве + 1;
		данныећассива[индекс¬ћассиве] = текЁл‘ормы;
		
	текЁл‘ормы = Ќеопределено;
	текЁл‘ормы["“ип"] 	 = ѕеречислени€.“ипƒанных‘ормы. онтейнер;
	текЁл‘ормы["¬ысота"] = ?(¬ысотаЌадписей > ¬ысотаѕол€, ¬ысотаЌадписей, ¬ысотаѕол€) + √лоб. онстанты»нтерфейса["мќтступћинимальный"];		//максимальна€ высота элементов в массиве (вместе с отступами)
	текЁл‘ормы["ƒанные"] = данныећассива;
		
	индекс‘ормы = индекс‘ормы + 1;
	ƒанные‘ормы[индекс‘ормы] = текЁл‘ормы;
	
	// ƒеревоѕечатные‘ормы
	текЁл‘ормы = Ќеопределено;
	текЁл‘ормы["“ип"] = ѕеречислени€.“ипƒанных‘ормы.ƒерево;
	текЁл‘ормы["»м€"] = "ѕечатные‘ормы";
	текЁл‘ормы["ќтступ—лева"] = √лоб. онстанты»нтерфейса["мќтступћинимальный"];
	текЁл‘ормы["ќтступ—верху"] = √лоб. онстанты»нтерфейса["мќтступћинимальный"];
	индекс‘ормы = индекс‘ормы + 1;
	ƒанные‘ормы[индекс‘ормы] = текЁл‘ормы;
	//------- конец ƒеревоѕечатные‘ормы -------

 онецѕроцедуры

ѕроцедура Ќастроить“аблицы(_»нициализаци€“аблиц = Ћожь)
	
	≈сли _»нициализаци€“аблиц “огда
		√лоб.¬ставить олонки¬“аблицу(‘ормаћодул€["ƒеревоѕечатные‘ормы"], 4);
	 онец≈сли;
	
	ширина»конки = √лоб. онстанты»нтерфейса["–азмер»конки"];	
	
	// ƒеревоѕечатные‘ормы	
	// ширина столбцов:
	// 0-»конка (флажок):			- иконка
	// 1-ѕредставлениеƒокумента		- 100%
	// 2-»дентификатор объекта		- невидимый
	ширина“аблицы = ‘ормаћодул€["ƒеревоѕечатные‘ормы"].Ўирина;
	ширина0 = ширина“аблицы - 2*ширина»конки;		
	
	‘ормаћодул€["ƒеревоѕечатные‘ормы"].”становить¬идимость—толбца(3, Ћожь);
	‘ормаћодул€["ƒеревоѕечатные‘ормы"].Ќастроить—толбец(0, "", ширина»конки, "¬лево", »стина);
	‘ормаћодул€["ƒеревоѕечатные‘ормы"].Ќастроить—толбец(1, "", ширина»конки, "¬лево", »стина);
	‘ормаћодул€["ƒеревоѕечатные‘ормы"].Ќастроить—толбец(2, —лов DictDocument, ширина0, "¬лево", »стина);
	// конец ƒеревоѕечатные‘ормы
	
 онецѕроцедуры

ѕроцедура –азвернуть”злыƒерева()
	
	ѕопытка
	ƒл€  аждого текќбъектѕечати »з ћассивѕечатаемыхƒокументов ÷икл
//		≈сли текќбъектѕечати["ќтмечен"] = Ќеопределено »ли текќбъектѕечати["ќтмечен"] = Ћожь “огда
//			‘ормаћодул€["ƒеревоѕечатные‘ормы"].—вернуть(текќбъектѕечати["»д—трокиƒерева"]);
//		»наче
			‘ормаћодул€["ƒеревоѕечатные‘ормы"].–азвернуть(текќбъектѕечати["»д—трокиƒерева"]);
//		 онец≈сли;
	 онец÷икла;
	»сключение	
	 онецѕопытки;

 онецѕроцедуры

‘ункци€ ѕолучитьѕредставлениеѕечатной‘ормы(—трока»дƒокументќбъект, —трока»дѕечатна€‘орма)
	текћакет = ћассивѕечатаемыхƒокументов[—трока»дƒокументќбъект]["ѕечатные‘ормы"][—трока»дѕечатна€‘орма];
	представлениеѕечатной‘ормы = "(" + —трока(текћакет["„исло опий"]) + ") " + текћакет["ѕредставление"];
	¬озврат представлениеѕечатной‘ормы;
 онец‘ункции

ѕроцедура «аполнитьƒеревоƒокументов()
	ѕерем »д”злов;

	‘ормаћодул€["ƒеревоѕечатные‘ормы"].ќчистить—троки();
	≈сли ћассивѕечатаемыхƒокументов <> Ќеопределено “огда
	
		ƒл€  аждого тек лючќбъектаѕечати, текќбъектѕечати »з ћассивѕечатаемыхƒокументов ÷икл
			
			корневой”зел = Ќовый("ƒанные“абл—троки");
			// пуста€ колонка
			корневой”зел.”становить“ипячейки("строка");
			корневой”зел.”становить«начениеячейки(0, "");
			// »конка
			корневой”зел.”становить“ипячейки("строка");
			корневой”зел.”становить«начениеячейки(1, "", ?(текќбъектѕечати["ќтмечен"] = Ќеопределено »ли текќбъектѕечати["ќтмечен"] = Ћожь, √лоб.»конкиѕрочее.‘лажок—брошен, √лоб.»конкиѕрочее.‘лажок¬ыбран));
			
			корневой”зел.”становить“ипячейки("строка");

			≈сли текќбъектѕечати["ѕредставление"] = Ќеопределено “огда
				представлениеƒокумента = √лоб.ѕолучитьѕредставлениеƒокументаѕо¬иду(текќбъектѕечати["¬идƒокумента"]);
				корневой”зел.”становить«начениеячейки(2, √лоб.—формироватьѕредставлениеƒокумента(текќбъектѕечати["ќбъект"], текќбъектѕечати["¬идƒокумента"]), √лоб.»конкиƒокументов["ƒокументѕечати"]);				
			»наче
				корневой”зел.”становить«начениеячейки(2, текќбъектѕечати["ѕредставление"]);
			 онец≈сли;
			
			корневой”зел.”становить“ипячейки("строка");
			≈сли текќбъектѕечати["»дентификатор"] = Ќеопределено “огда
				стр»д—троки = —трока(текќбъектѕечати["ќбъект"].ѕолучить»дентификатор());
				корневой”зел.”становить«начениеячейки(3, стр»д—троки);
			»наче
				корневой”зел.”становить«начениеячейки(3, текќбъектѕечати["»дентификатор"]);
			 онец≈сли;
			
			корневой”зел.”становить“олькоѕросмотр(истина);
			
			ћассивѕечатаемыхƒокументов[тек лючќбъектаѕечати]["»д—трокиƒерева"] = ‘ормаћодул€["ƒеревоѕечатные‘ормы"].¬ставить орневую—троку(корневой”зел, Ќеопределено, Ќеопределено);	
			
			≈сли ћассивѕечатаемыхƒокументов[тек лючќбъектаѕечати]["ѕечатные‘ормы"] <> Ќеопределено “огда
				ƒл€  аждого тек лючћакета, текћакет »з ћассивѕечатаемыхƒокументов[тек лючќбъектаѕечати]["ѕечатные‘ормы"] ÷икл
					нова€“абл—трока = Ќовый("ƒанные“абл—троки");
					// пуста€ колонка
					нова€“абл—трока.”становить“ипячейки("строка");
					нова€“абл—трока.”становить«начениеячейки(0, "");
					// »конка
					нова€“абл—трока.”становить“ипячейки("строка");
					нова€“абл—трока.”становить«начениеячейки(1, "", ?(текћакет["ќтмечен"] = Ќеопределено »ли текћакет["ќтмечен"] = Ћожь, √лоб.»конкиѕрочее.‘лажок—брошен, √лоб.»конкиѕрочее.‘лажок¬ыбран));
					
					нова€“абл—трока.”становить“ипячейки("строка");
					представлениеѕечатной‘ормы = ѕолучитьѕредставлениеѕечатной‘ормы(тек лючќбъектаѕечати, тек лючћакета);
					нова€“абл—трока.”становить«начениеячейки(2, представлениеѕечатной‘ормы);
					
					нова€“абл—трока.”становить“ипячейки("строка");
					нова€“абл—трока.”становить«начениеячейки(3, тек лючћакета);
					
					нова€“абл—трока.”становить“олькоѕросмотр(истина);
					
					ћассивѕечатаемыхƒокументов[тек лючќбъектаѕечати]["ѕечатные‘ормы"][тек лючћакета]["»д—трокиƒерева"] = ‘ормаћодул€["ƒеревоѕечатные‘ормы"].¬ставить—троку(ћассивѕечатаемыхƒокументов[тек лючќбъектаѕечати]["»д—трокиƒерева"], нова€“абл—трока, Ќеопределено, Ќеопределено);
				 онец÷икла;				
				
			 онец≈сли;
			
		 онец÷икла;
	
	 онец≈сли;
	
	–азвернуть”злыƒерева();

 онецѕроцедуры

‘ункци€ ≈стьќтмеченныећакетыѕечати(_—тр»дентификаторƒокумента)

	естьќтмеченныећакеты = Ћожь;
	≈сли ћассивѕечатаемыхƒокументов[_—тр»дентификаторƒокумента]["ѕечатные‘ормы"] <> Ќеопределено “огда
		ƒл€  аждого текЁл »з ћассивѕечатаемыхƒокументов[_—тр»дентификаторƒокумента]["ѕечатные‘ормы"] ÷икл
			естьќтмеченныећакеты = естьќтмеченныећакеты »ли Ѕулево(текЁл["ќтмечен"]);
		 онец÷икла;
	 онец≈сли;

	¬озврат естьќтмеченныећакеты;
 онец‘ункции

‘ункци€ ¬вести оличество опий(параметр)
	
	ѕерем допѕараметры;
	»д—троки = ‘ормаћодул€["ƒеревоѕечатные‘ормы"].»дентификатор“екущей—троки;
	≈сли »д—троки <> Ќеопределено “огда
		
		данные—троки = ‘ормаћодул€["ƒеревоѕечатные‘ормы"].ѕолучитьƒанные—троки(»д—троки);		
		ид–одительской—троки = ‘ормаћодул€["ƒеревоѕечатные‘ормы"].ѕолучить–одительскую—троку(»д—троки);
		данные–одительской—троки = ‘ормаћодул€["ƒеревоѕечатные‘ормы"].ѕолучитьƒанные—троки(ид–одительской—троки);
		стр»дќбъектаѕечати = данные–одительской—троки.ѕолучить«начениеячейки(3);
		стр»дћакета = данные—троки.ѕолучить«начениеячейки(3);
		тек„исло опий = ћассивѕечатаемыхƒокументов[стр»дќбъектаѕечати]["ѕечатные‘ормы"][стр»дћакета]["„исло опий"];
		
		допѕараметры[" оличество"] 		= „исло(тек„исло опий);
		допѕараметры["ƒробное"] 		= Ћожь;
		допѕараметры["–еквизит¬вода"] 	= " оличество";
		√лоб.ќткрыть¬спомогательную‘орму("NumPad", ќбработка¬вода оличества, Ћожь, допѕараметры);			
				
	 онец≈сли;
	
	¬озврат 0;
 онец‘ункции

‘ункци€ ƒеревоѕечатные‘ормы_ѕриЌажатииѕоячейке(_ люч—троки, _Ќомер—толбца)

	данные—троки = ‘ормаћодул€["ƒеревоѕечатные‘ормы"].ѕолучитьƒанные—троки(_ люч—троки);		
	≈сли ‘ормаћодул€["ƒеревоѕечатные‘ормы"].явл€етс€ орневой—трокой(_ люч—троки) “огда
		стр»дќбъектаѕечати = данные—троки.ѕолучить«начениеячейки(3);			
		текќтметка = ћассивѕечатаемыхƒокументов[стр»дќбъектаѕечати]["ќтмечен"];
		текќтметка = ?(текќтметка, Ћожь, »стина);
		ћассивѕечатаемыхƒокументов[стр»дќбъектаѕечати]["ќтмечен"] = текќтметка;			
		данные—троки.”становить«начениеячейки(1, "", ?(текќтметка, √лоб.»конкиѕрочее.‘лажок¬ыбран, √лоб.»конкиѕрочее.‘лажок—брошен));			
		
		≈сли ћассивѕечатаемыхƒокументов[стр»дќбъектаѕечати]["ѕечатные‘ормы"] <> Ќеопределено “огда
			ƒл€  аждого тек люч, тек«нач »з ћассивѕечатаемыхƒокументов[стр»дќбъектаѕечати]["ѕечатные‘ормы"] ÷икл
				идƒочерней—трокиƒерева = тек«нач["»д—трокиƒерева"];
				ћассивѕечатаемыхƒокументов[стр»дќбъектаѕечати]["ѕечатные‘ормы"][тек люч]["ќтмечен"] = текќтметка;
				данныеƒочерней—троки = ‘ормаћодул€["ƒеревоѕечатные‘ормы"].ѕолучитьƒанные—троки(идƒочерней—трокиƒерева);
				данныеƒочерней—троки.”становить«начениеячейки(1, "", ?(текќтметка, √лоб.»конкиѕрочее.‘лажок¬ыбран, √лоб.»конкиѕрочее.‘лажок—брошен));
				‘ормаћодул€["ƒеревоѕечатные‘ормы"].”становитьƒанные—троки(идƒочерней—трокиƒерева, данныеƒочерней—троки);
			 онец÷икла;
		 онец≈сли;		
	»наче
		стр»дћакета = данные—троки.ѕолучить«начениеячейки(3);
		ид–одительской—троки = ‘ормаћодул€["ƒеревоѕечатные‘ормы"].ѕолучить–одительскую—троку(_ люч—троки);
		данные–одительской—троки = ‘ормаћодул€["ƒеревоѕечатные‘ормы"].ѕолучитьƒанные—троки(ид–одительской—троки);
		стр»дќбъектаѕечати = данные–одительской—троки.ѕолучить«начениеячейки(3);
		текќтметка = ћассивѕечатаемыхƒокументов[стр»дќбъектаѕечати]["ѕечатные‘ормы"][стр»дћакета]["ќтмечен"];
		текќтметка = ?(текќтметка, Ћожь, »стина);			
		ћассивѕечатаемыхƒокументов[стр»дќбъектаѕечати]["ѕечатные‘ормы"][стр»дћакета]["ќтмечен"] = текќтметка;
		данные—троки.”становить«начениеячейки(1, "", ?(текќтметка, √лоб.»конкиѕрочее.‘лажок¬ыбран, √лоб.»конкиѕрочее.‘лажок—брошен));
		текќтметка–одител€ = ?(текќтметка, »стина, ≈стьќтмеченныећакетыѕечати(стр»дќбъектаѕечати));
		ћассивѕечатаемыхƒокументов[стр»дќбъектаѕечати]["ќтмечен"] = текќтметка–одител€;						
		данные–одительской—троки.”становить«начениеячейки(1, "", ?(текќтметка–одител€, √лоб.»конкиѕрочее.‘лажок¬ыбран, √лоб.»конкиѕрочее.‘лажок—брошен));			
		‘ормаћодул€["ƒеревоѕечатные‘ормы"].”становитьƒанные—троки(ид–одительской—троки, данные–одительской—троки);									
	 онец≈сли;
	‘ормаћодул€["ƒеревоѕечатные‘ормы"].”становитьƒанные—троки(_ люч—троки, данные—троки);

	¬озврат 0;
 онец‘ункции

// ‘ункци€ возвращает массив элементов справочника ѕечатные‘ормыƒокументовќрганизаций дл€ заданной организации
// ключ массива - строковый идентификатор элемента справочника ѕечатные‘ормыƒокументов
//
‘ункци€ ѕолучитьћассивѕечатных‘ормќрганизации(_ќрганизаци€)
	
	массивѕечатных‘ормќрганизации = Ќеопределено;
	—прѕечатные‘ормыќрганизации.—бросить‘ильтр();
	—прѕечатные‘ормыќрганизации.”становить‘ильтр("ќрганизаци€", _ќрганизаци€);
	ƒл€  аждого текЁл »з —прѕечатные‘ормыќрганизации.ѕолучить—писок() ÷икл
		≈сли текЁл.ѕечатна€‘ормаƒокумента <> Ќеопределено “огда
			стр»дѕечатна€‘орма = —трока(текЁл.ѕечатна€‘ормаƒокумента.ѕолучить»дентификатор());
			массивѕечатных‘ормќрганизации[стр»дѕечатна€‘орма] = текЁл;
		 онец≈сли;
	 онец÷икла;
	
	¬озврат массивѕечатных‘ормќрганизации;
 онец‘ункции

// ‘ункци€ добавл€ет объект документа в массив, по которому строитс€ ƒеревоѕечатаемыхƒокументов,
// возвращает »стина, если документ был добавлен, Ћожь - если печать документа не предусмотрена
//
‘ункци€ ƒобавитьќбъектѕечати¬—писок(_ќбъектѕечати)	

	документƒобавлен¬—писок = Ћожь;	
	текќбъект = _ќбъектѕечати["ќбъект"];
	видƒокумента = _ќбъектѕечати["¬идƒокумента"];
	печатна€‘орма = _ќбъектѕечати["ѕечатна€‘орма"];
	
	≈сли печатна€‘орма = Ќеопределено “огда	
		
		видƒокумента = √лоб.ѕолучить¬идƒокумента(текќбъект, »стина);
		≈сли видƒокумента <> Ќеопределено “огда		
			документƒобавлен¬—писок = »стина;
		
			стр»дќбъекта = —трока(текќбъект.ѕолучить»дентификатор());		
			≈сли ћассивѕечатаемыхƒокументов[стр»дќбъекта] = Ќеопределено “огда
	
				новыйƒокумент = Ќеопределено;
				новыйƒокумент["ќбъект"] = текќбъект;
				новыйƒокумент["¬идƒокумента"] = видƒокумента;			
				
				массивѕечатных‘ормќрганизации = ѕолучитьћассивѕечатных‘ормќрганизации(текќбъект.ќрганизаци€);
				—прѕечатные‘ормы.—бросить‘ильтр();			
				–езультат = —прѕечатные‘ормы.”становить‘ильтр("¬идƒокумента", видƒокумента);
				массивѕечатных‘орм = Ќеопределено;
				количествоѕечатных‘орм = —прѕечатные‘ормы. оличество();
				фл≈стьѕечатные‘ормы = Ћожь;
				≈сли количествоѕечатных‘орм > 0 “огда				
					ƒл€  аждого текЁл »з —прѕечатные‘ормы.ѕолучить—писок() ÷икл
						стр»дѕечатной‘ормы = —трока(текЁл.ѕолучить»дентификатор());
						≈сли массивѕечатных‘ормќрганизации[стр»дѕечатной‘ормы] <> Ќеопределено “огда
							печатна€‘орма = Ќеопределено;
							печатна€‘орма["ќбъект"] = текЁл;
							печатна€‘орма["»м€ѕечатной‘ормы"] = текЁл. од;
							печатна€‘орма["ѕредставление"] = текЁл.Ќаименование;
							печатна€‘орма["„исло опий"] = текЁл.„исло опий;
							печатна€‘орма["ќтмечен"] = »стина;	//?(количествоѕечатных‘орм = 1, »стина, Ћожь);
							печатна€‘орма["√рафический‘ормат"] = текЁл.√рафический‘ормат;	//?(количествоѕечатных‘орм = 1, »стина, Ћожь);
							массивѕечатных‘орм[стр»дѕечатной‘ормы] = печатна€‘орма;
							фл≈стьѕечатные‘ормы = »стина;
						 онец≈сли;
					 онец÷икла;
				 онец≈сли;
				новыйƒокумент["ќтмечен"] = фл≈стьѕечатные‘ормы;
				новыйƒокумент["ѕечатные‘ормы"] = массивѕечатных‘орм;
				ћассивѕечатаемыхƒокументов[стр»дќбъекта] = новыйƒокумент;
				
			 онец≈сли;
		 онец≈сли;
		
	»наче
		документƒобавлен¬—писок = »стина;
		
		новыйƒокумент = Ќеопределено;
		новыйƒокумент["ќбъект"] 		= текќбъект;
		новыйƒокумент["¬идƒокумента"] 	= видƒокумента;		
		новыйƒокумент["»дентификатор"] 	= текќбъект["»дентификатор"];
		новыйƒокумент["ѕредставление"] 	= текќбъект["ѕредставление"];
		
		массивѕечатных‘орм = Ќеопределено;
		нова€ѕечатна€‘орма = Ќеопределено;
		нова€ѕечатна€‘орма["ќбъект"] = печатна€‘орма["ќбъект"];
		нова€ѕечатна€‘орма["»м€ѕечатной‘ормы"] = печатна€‘орма[" од"];
		нова€ѕечатна€‘орма["ѕредставление"] = —трока(печатна€‘орма["ѕредставление"]);
		нова€ѕечатна€‘орма["„исло опий"] = 1;
		нова€ѕечатна€‘орма["ќтмечен"] = »стина;
		массивѕечатных‘орм[печатна€‘орма["»дентификатор"]] = нова€ѕечатна€‘орма;
		фл≈стьѕечатные‘ормы = »стина;
		
		новыйƒокумент["ќтмечен"] = фл≈стьѕечатные‘ормы;
		новыйƒокумент["ѕечатные‘ормы"] = массивѕечатных‘орм;
		
		ћассивѕечатаемыхƒокументов[видƒокумента] = новыйƒокумент;				

	 онец≈сли;
	
	¬озврат документƒобавлен¬—писок;
 онец‘ункции

// ‘ункци€ удал€ет объект печати из массива, по которому строитс€ ƒеревоѕечатаемыхƒокументов,
// в параметре передаетс€ GUID объекта (тип: —трока, ”никальный»дентификатор)
//
ѕроцедура ”далитьќбъектѕечати»з—писка(_»дентификаторќбъекта)	

	ѕопытка
		≈сли _»дентификаторќбъекта = "–еестрƒокументов" “огда
			стр»дќбъекта = "–еестрƒокументов";
		»наче
			идќбъекта = Ќовый √уид(_»дентификаторќбъекта);
			стр»дќбъекта = —трока(идќбъекта);
		 онец≈сли;
		
		≈сли ћассивѕечатаемыхƒокументов[стр»дќбъекта] <> Ќеопределено “огда
			ћассивѕечатаемыхƒокументов[стр»дќбъекта]["ѕечатные‘ормы"] = Ќеопределено;
			ћассивѕечатаемыхƒокументов[стр»дќбъекта] = Ќеопределено;
		 онец≈сли;		
	»сключение		
	 онецѕопытки;

 онецѕроцедуры

ѕроцедура ќбновить—осто€ние‘ормы()
	
	ѕропустить—чет‘актуру = Ћожь;
	«аполнитьƒеревоƒокументов();
	
	‘ормаћодул€["фл–аздел€ть—траницы"].ќтмечен = √лоб.ќпределить«начениеЋогической онстанты("–аздел€ть—траницы", »стина);
	 оличествоќтступов =  онстанты. оличествоќтступов.ѕолучить();
	‘ормаћодул€["ѕоле¬вода оличествоќтступов"].“екст = —трока(?( оличествоќтступов = Ќеопределено, 1,  оличествоќтступов));
	‘ормаћодул€["ѕоле¬вода оличествоќтступов"].”становить„исловой‘ормат(0, Ћожь);
	”становить¬идимость онтролов();

 онецѕроцедуры

‘ункци€ ќбработкаќбновить—осто€ние‘ормыѕосле«акрыти€ƒокумента(_ћодуль‘ормы, _–езультат)

	√лоб.«акрытьћодуль(_ћодуль‘ормы);
	≈сли _–езультат “огда
		ќбновить—осто€ние‘ормы();
	 онец≈сли;

	¬озврат 0;
 онец‘ункции

‘ункци€ ќбработкаќбновить—осто€ние‘ормы(_ћодуль‘ормы, _–езультат)

	_ћодуль‘ормы.¬ыгрузитьћодуль();
	≈сли _–езультат “огда
		ќбновить—осто€ние‘ормы();
	 онец≈сли;

	¬озврат 0;
 онец‘ункции

ѕроцедура ќткрытьќбъектѕечати(_ люч—троки = Ќеопределено)
	
	ид“екущей—троки = ?(_ люч—троки = Ќеопределено, ‘ормаћодул€["ƒеревоѕечатные‘ормы"].»дентификатор“екущей—троки, _ люч—троки); 
	≈сли ид“екущей—троки <> Ќеопределено “огда	
		≈сли ‘ормаћодул€["ƒеревоѕечатные‘ормы"].явл€етс€ орневой—трокой(ид“екущей—троки) “огда
			данные—троки = ‘ормаћодул€["ƒеревоѕечатные‘ормы"].ѕолучитьƒанные—троки(ид“екущей—троки);
			стр»дќбъекта = данные—троки.ѕолучить«начениеячейки(3);
			≈сли ћассивѕечатаемыхƒокументов[стр»дќбъекта] <> Ќеопределено “огда
				им€ƒокумента = —трока(ћассивѕечатаемыхƒокументов[стр»дќбъекта]["¬идƒокумента"]);
				≈сли им€ƒокумента = "–еестрƒокументов" “огда
					√лоб.¬ывести¬сплывающее—ообщение(—лов DictCatalogsDialogFormsReportIsOpen);
					¬озврат;
				 онец≈сли;
//				≈сли им€ƒокумента <> ѕеречислени€.¬идыƒокументов.ƒолг.ѕредставление() “огда
					»м€¬ладельца‘ормы = ?(им€ƒокумента = ѕеречислени€.¬идыƒокументов.– ќ.ѕредставление(), ѕеречислени€.¬идыƒокументов.ѕ ќ.ѕредставление(), им€ƒокумента);					
					»м€¬ладельца‘ормы = ?(»м€¬ладельца‘ормы = ѕеречислени€.¬идыƒокументов.¬озврат“оваров.ѕредставление(), ѕеречислени€.¬идыƒокументов.ѕоступление.ѕредставление(), »м€¬ладельца‘ормы);
					—труктураƒокумента = Ќеопределено;
					—труктураƒокумента.¬идƒокумента = им€ƒокумента;
					—труктураƒокумента.ƒокумент		= ћассивѕечатаемыхƒокументов[стр»дќбъекта]["ќбъект"];
					√лоб.ќткрыть‘ормуЁлемента(»м€¬ладельца‘ормы, Ћожь, —труктураƒокумента.ƒокумент, ќбработкаќбновить—осто€ние‘ормыѕосле«акрыти€ƒокумента, —труктураƒокумента, »стина);
//				»наче
//					ћодульƒокумента = ќткрытьћодуль(»менаћодулей.ƒокументы[им€ƒокумента].‘ормаƒокумента, ћассивѕечатаемыхƒокументов[стр»дќбъекта]["ќбъект"]);
//					ћодульƒокумента.”становитьќбработку¬ыбора(ќбработкаќбновить—осто€ние‘ормы);
//					ћодульƒокумента.Ётаформа.ѕоказать(1);
//				 онец≈сли;
			 онец≈сли;
		 онец≈сли;
	 онец≈сли;
	
 онецѕроцедуры

‘ункци€ ќбработка¬вода оличества(_ћодуль‘ормы, _–езультат) Ёкспорт

	≈сли _–езультат “огда
		
		ид“екущей—троки = ‘ормаћодул€["ƒеревоѕечатные‘ормы"].»дентификатор“екущей—троки; 
		≈сли ид“екущей—троки <> Ќеопределено “огда
			≈сли Ќе ‘ормаћодул€["ƒеревоѕечатные‘ормы"].явл€етс€ орневой—трокой(ид“екущей—троки) “огда
				данные—троки = ‘ормаћодул€["ƒеревоѕечатные‘ормы"].ѕолучитьƒанные—троки(ид“екущей—троки);		
				ид–одительской—троки = ‘ормаћодул€["ƒеревоѕечатные‘ормы"].ѕолучить–одительскую—троку(ид“екущей—троки);
				данные–одительской—троки = ‘ормаћодул€["ƒеревоѕечатные‘ормы"].ѕолучитьƒанные—троки(ид–одительской—троки);
				стр»дќбъектаѕечати = данные–одительской—троки.ѕолучить«начениеячейки(3);
				стр»дћакета = данные—троки.ѕолучить«начениеячейки(3);
				значение ол = ÷елое(_–езультат[" оличество"]);
				значение ол = ?(значение ол < 1, 1, значение ол);
				ћассивѕечатаемыхƒокументов[стр»дќбъектаѕечати]["ѕечатные‘ормы"][стр»дћакета]["„исло опий"] = значение ол;
				ћассивѕечатаемыхƒокументов[стр»дќбъектаѕечати]["ѕечатные‘ормы"][стр»дћакета]["ќтмечен"] = »стина;
				ћассивѕечатаемыхƒокументов[стр»дќбъектаѕечати]["ќтмечен"] = »стина;
				данные—троки.”становить«начениеячейки(2, ѕолучитьѕредставлениеѕечатной‘ормы(стр»дќбъектаѕечати, стр»дћакета));
				‘ормаћодул€["ƒеревоѕечатные‘ормы"].”становитьƒанные—троки(ид“екущей—троки, данные—троки);
			 онец≈сли;
		 онец≈сли;
		
	 онец≈сли;
	
	¬озврат 0;
 онец‘ункции

‘ункци€ ƒеревоѕечатные‘ормы_ѕриƒвойномЌажатииѕоячейке(_ люч—троки, _Ќомер—толбца)

//	ѕерем допѕараметры;	
//		
//	данные—троки = ‘ормаћодул€["ƒеревоѕечатные‘ормы"].ѕолучитьƒанные—троки(_ люч—троки);		
//	≈сли ‘ормаћодул€["ƒеревоѕечатные‘ормы"].явл€етс€ орневой—трокой(_ люч—троки) “огда
//	
//		ќткрытьќбъектѕечати(_ люч—троки);
//		
//	»наче
//		ид–одительской—троки = ‘ормаћодул€["ƒеревоѕечатные‘ормы"].ѕолучить–одительскую—троку(_ люч—троки);
//		данные–одительской—троки = ‘ормаћодул€["ƒеревоѕечатные‘ормы"].ѕолучитьƒанные—троки(ид–одительской—троки);
//		стр»дќбъектаѕечати = данные–одительской—троки.ѕолучить«начениеячейки(3);
//		стр»дћакета = данные—троки.ѕолучить«начениеячейки(3);
//		тек„исло опий = ћассивѕечатаемыхƒокументов[стр»дќбъектаѕечати]["ѕечатные‘ормы"][стр»дћакета]["„исло опий"];
//		
//		допѕараметры[" оличество"] 		= „исло(тек„исло опий);
//		допѕараметры["ƒробное"] 		= Ћожь;
//		допѕараметры["–еквизит¬вода"] 	= " оличество";
//		√лоб.ќткрыть¬спомогательную‘орму("NumPad", ќбработка¬вода оличества, Ћожь, допѕараметры);
//		
//	 онец≈сли;

	¬озврат 0;
 онец‘ункции

‘ункци€ ќбработкаƒобавлени€ƒокументаѕечати(_ћодуль‘ормы, _–езультат)

	документќбъект = Ќеопределено;
	≈сли _–езультат “огда
		≈сли _ћодуль‘ормы.ƒокумент¬ыбора <> Ќеопределено “огда
			
			объектѕечати = Ќеопределено;		
			объектѕечати["ќбъект"] = _ћодуль‘ормы.ƒокумент¬ыбора.ƒокумент;
			объектѕечати["¬идƒокумента"] = _ћодуль‘ормы.ƒокумент¬ыбора.¬идƒокумента;
			
			ƒобавитьќбъектѕечати¬—писок(объектѕечати);
			ќбновить—осто€ние‘ормы();
			
		 онец≈сли;
	 онец≈сли;
	
	_ћодуль‘ормы.¬ыгрузитьћодуль();
	
	¬озврат 0;
 онец‘ункции

‘ункци€ ќтменитьƒействие()
	
	≈сли »детѕечать “огда
		√лоб.¬ывести¬сплывающее—ообщение(—лов DictCatalogsDialogStopPrint);
		¬озврат »стина;
	»наче
		¬озврат Ћожь;
	 онец≈сли;
	
 онец‘ункции

ѕроцедура  онтекстноећенюƒерева_ƒобавить(_ѕараметрћеню = Ќеопределено)
	
	ѕерем —писокƒокументов;
	≈сли ќтменитьƒействие() “огда
		¬озврат;
	 онец≈сли;
	—писокƒокументов[0] = ѕеречислени€.¬идыƒокументов.«аказ.ѕредставление();
	—писокƒокументов[1] = ѕеречислени€.¬идыƒокументов.ћерчендайзинг.ѕредставление();
	—писокƒокументов[2] = ѕеречислени€.¬идыƒокументов.ѕ ќ.ѕредставление();
	—писокƒокументов[3] = ѕеречислени€.¬идыƒокументов.ƒолг.ѕредставление();
	—писокƒокументов[4] = ѕеречислени€.¬идыƒокументов.ѕосещение.ѕредставление();
	—писокƒокументов[5] = ѕеречислени€.¬идыƒокументов.ѕоступление.ѕредставление();
	—писокƒокументов[6] = ѕеречислени€.¬идыƒокументов.ѕеремещение.ѕредставление();
	—писокƒокументов[7] = ѕеречислени€.¬идыƒокументов.–еализаци€.ѕредставление();
	ћодуль∆урналаƒокументов = ќткрытьћодуль(»менаћодулей.‘ормыƒиалогов.‘орма∆урналаƒокументов);
	ћодуль∆урналаƒокументов.ƒл€¬ыбора 		 	 = »стина;
	ћодуль∆урналаƒокументов.«акладки¬ыбора		 = —писокƒокументов;
	ћодуль∆урналаƒокументов.”становитьќбработку¬ыбора(ќбработкаƒобавлени€ƒокументаѕечати);
	ћодуль∆урналаƒокументов.‘ормаћодул€.ѕоказать(1);
	
 онецѕроцедуры

ѕроцедура  онтекстноећенюƒерева_”далить(_ѕараметрћеню = Ќеопределено)
	
	≈сли ќтменитьƒействие() “огда
		¬озврат;
	 онец≈сли;
	ид“екущей—троки = ‘ормаћодул€["ƒеревоѕечатные‘ормы"].»дентификатор“екущей—троки; 
	≈сли ид“екущей—троки <> Ќеопределено “огда	
		≈сли ‘ормаћодул€["ƒеревоѕечатные‘ормы"].явл€етс€ орневой—трокой(ид“екущей—троки) “огда
			данные—троки = ‘ормаћодул€["ƒеревоѕечатные‘ормы"].ѕолучитьƒанные—троки(ид“екущей—троки);
			стр»дќбъекта = данные—троки.ѕолучить«начениеячейки(3);
			”далитьќбъектѕечати»з—писка(стр»дќбъекта);
			ќбновить—осто€ние‘ормы();
		 онец≈сли;
	 онец≈сли;
	
 онецѕроцедуры

ѕроцедура  онтекстноећенюƒерева_ќткрыть(_ѕараметрћеню = Ќеопределено)
	
	≈сли ќтменитьƒействие() “огда
		¬озврат;
	 онец≈сли;
	ќткрытьќбъектѕечати();
	
 онецѕроцедуры

ѕроцедура Ќастроить онтекстноећенюƒерева()

	ид“екущей—троки = ‘ормаћодул€["ƒеревоѕечатные‘ормы"].»дентификатор“екущей—троки; 	
	
	флѕунктыћенюќбъектаѕечати = Ћожь;
	≈сли ид“екущей—троки <> Ќеопределено “огда
		≈сли ‘ормаћодул€["ƒеревоѕечатные‘ормы"].явл€етс€ орневой—трокой(ид“екущей—троки) “огда
			флѕунктыћенюќбъектаѕечати = »стина;
		 онец≈сли;
	 онец≈сли;
	 онтекстноећенюƒерева.¬ключитьѕунктћеню("ќткрыть", флѕунктыћенюќбъектаѕечати);
	 онтекстноећенюƒерева.¬ключитьѕунктћеню("”далить", флѕунктыћенюќбъектаѕечати);

 онецѕроцедуры

ѕроцедура —оздать онтекстноећенюƒерева()

	 онтекстноећенюƒерева = Ќовый(" онтекстћеню");
	 онтекстноећенюƒерева.ƒобавить(—лов DictCatalogsDialogFormsAddDoc, "ƒобавить");
	 онтекстноећенюƒерева.”становитьѕри¬ыборе("ƒобавить",  онтекстноећенюƒерева_ƒобавить);

	 онтекстноећенюƒерева.ƒобавить(—лов DictCatalogsDialogFormsNotSelectOpenDoc, "ќткрыть");		
	 онтекстноећенюƒерева.”становитьѕри¬ыборе("ќткрыть",  онтекстноећенюƒерева_ќткрыть);
	 онтекстноећенюƒерева.ƒобавить(—лов DictCatalogsDialogFormsHideDoc, "”далить");				
	 онтекстноећенюƒерева.”становитьѕри¬ыборе("”далить",  онтекстноећенюƒерева_”далить);
	
	 онтекстноећеню¬вода оличества = Ќовый(" онтекстћеню");
	 онтекстноећеню¬вода оличества.ƒобавить(—лов DictCatalogsDialogFormsQtyCopy, "”казать оличество опий");
	 онтекстноећеню¬вода оличества.”становитьѕри¬ыборе("”казать оличество опий", ¬вести оличество опий);

 онецѕроцедуры

‘ункци€ ƒеревоѕечатные‘ормы_ѕри”держании()
	
	Ќастроить онтекстноећенюƒерева();
	ид“екущей—троки = ‘ормаћодул€["ƒеревоѕечатные‘ормы"].»дентификатор“екущей—троки; 	
	
	флѕунктыћенюќбъектаѕечати = Ћожь;
	≈сли ид“екущей—троки <> Ќеопределено “огда
		≈сли ‘ормаћодул€["ƒеревоѕечатные‘ормы"].явл€етс€ орневой—трокой(ид“екущей—троки) “огда
			флѕунктыћенюќбъектаѕечати = »стина;
		 онец≈сли;
	 онец≈сли;
	≈сли флѕунктыћенюќбъектаѕечати “огда
		 онтекстноећенюƒерева.¬ызвать онтекстноећеню(‘ормаћодул€["ƒеревоѕечатные‘ормы"]);
	»наче
		 онтекстноећеню¬вода оличества.¬ызвать онтекстноећеню(‘ормаћодул€["ƒеревоѕечатные‘ормы"]);
	 онец≈сли;
	
	¬озврат 0;
 онец‘ункции

///////////////////////////////////////////
// ћ≈Ќё ‘ќ–ћџ

‘ункци€ ћеню_«акрыть_ѕриЌажатии()
	
	‘ормаћодул€.«акрытьќтмена();
	
	¬озврат 0;	
 онец‘ункции

// ‘ункци€ определ€ет ответ пользовател€ о необходимости проведени€
// документа реализации
‘ункци€ –езультатќтветаќѕроведении(–езультат)
	
	≈сли √лоб.„исла–авны(–езультат, 1, 0) “огда
		структураѕечати 	 = ћассивћакетовѕечати[»ндекс“екущегоћакета];
		объектѕечати = ћассивѕечатаемыхƒокументов[структураѕечати[" лючќбъект"]]["ќбъект"];
		–езультатѕроведени€ = объектѕечати.ѕровести();
		≈сли Ќе –езультатѕроведени€ “огда
			ѕропустить—чет‘актуру = »стина;
			ѕослеѕечатићакета(»стина);
			√лоб.¬ывести¬сплывающее—ообщение(—лов DictCatalogsDialogPrintErr);
		 онец≈сли;
	»наче
		ѕропустить—чет‘актуру = »стина;
		ѕослеѕечатићакета(»стина);
		√лоб.¬ывести¬сплывающее—ообщение(—лов DictCatalogsDialogPrintErr);
	 онец≈сли;
	ѕриќкончанииѕечатићакета(ћодульѕечати. одыќшибокѕечати["Ќетќшибок"]);
	
	¬озврат 0;
 онец‘ункции

ѕроцедура «апуститьѕечатьћакета¬ѕортретнойќриентации(_–езультат)

	ќриентаци€—траницы“екущегоћакета = 0;		// код портретной ориентации страницы
	ѕриќкончанииѕечатићакета(ћодульѕечати. одыќшибокѕечати["Ќетќшибок"]);
	
 онецѕроцедуры

ѕроцедура ѕослеѕечатићакета(_ѕерейтиЌа—ледующийћакет)

	»детѕечать = Ћожь;
	≈сли _ѕерейтиЌа—ледующийћакет “огда
		ќриентаци€—траницы“екущегоћакета = Ќеопределено;		
		»ндекс“екущегоћакета = »ндекс“екущегоћакета + 1;
		„исло опийѕечатной‘ормы = 1;
		»ндекс“екущей опииѕечати = 1;
	»наче
		»ндекс“екущей опииѕечати = »ндекс“екущей опииѕечати + 1;
	 онец≈сли;	
	
 онецѕроцедуры

// ѕроцедура устанавливает свойство "–аспечатан" у последнего отпечатанного объекта
//
ѕроцедура ”становить—войство–аспечатан”ќбъекта()
	
	структураѕечати = ћассивћакетовѕечати[»ндекс“екущегоћакета];
	≈сли структураѕечати <> Ќеопределено “огда		
		объектѕечати 			= ћассивѕечатаемыхƒокументов[структураѕечати[" лючќбъект"]];
		документѕечати			= объектѕечати["ќбъект"];
		видƒокумента			= объектѕечати["¬идƒокумента"];
		≈сли видƒокумента <> "–еестрƒокументов" “огда			
			≈сли (Ќе документѕечати.–аспечатан) “огда
				флƒокумент»зменен = документѕечати.ѕометка¬ыгрузки;
				документѕечати.–аспечатан = »стина;
				документѕечати.«аписать();
				≈сли Ќе флƒокумент»зменен “огда
					документѕечати.ѕометка¬ыгрузки = Ћожь;
				 онец≈сли;
			 онец≈сли;
		 онец≈сли;
	 онец≈сли;
	
 онецѕроцедуры

// ‘ункци€ запуска печати следующего макета из списка
//
‘ункци€ ѕриќкончанииѕечатићакета(кодќшибки)

	кодќшибки = ÷елое(кодќшибки);
	≈сли кодќшибки > 0 “огда
		текстќшибки = "";
		
		≈сли кодќшибки = ћодульѕечати. одыќшибокѕечати["Ќет—оединени€—ѕринтером"] “огда
			текстќшибки = —лов DictCatalogPrintErroeEndErrCon;
		 онец≈сли;
		
		≈сли кодќшибки = ћодульѕечати. одыќшибокѕечати["ќшибка„тени€«аписиѕринтера"] “огда
			текстќшибки = —лов DictCatalogPrintErroeEndErr;
		 онец≈сли;
		
		≈сли кодќшибки = ћодульѕечати. одыќшибокѕечати["Ќеверныеѕараметрыѕринтера"] “огда
			текстќшибки = —лов DictCatalogPrintErroeEndErrParams;
		 онец≈сли;
		
		≈сли кодќшибки = ћодульѕечати. одыќшибокѕечати["ќшибка одировани€—имволов"] “огда
			текстќшибки = —лов DictCatalogPrintErroeEndDeCode;
		 онец≈сли;
		
		≈сли текстќшибки <> "" “огда		
			√лоб.¬ывести¬сплывающее—ообщение(текстќшибки);
		 онец≈сли;
		»детѕечать = Ћожь;
		√лоб.—труктураѕроцессѕечать = Ќеопределено;
		
		¬озврат 0;
	 онец≈сли;
	
~Ќачалоѕечатићакета:			// метка начала печати очередного макета (чтобы избежать рекурсивного вызова текущей функции и упростить код)

	≈сли »ндекс“екущегоћакета >= √лоб.ѕолучить оличествоЁлементов(ћассивћакетовѕечати) “огда
		»детѕечать = Ћожь;
		√лоб.—труктураѕроцессѕечать = Ќеопределено;
		‘ормаћодул€.«акрытьќк();
		¬озврат 0;
	 онец≈сли;
	
	≈сли ћассивћакетовѕечати[»ндекс“екущегоћакета] = Ќеопределено “огда
		ѕослеѕечатићакета(»стина);
		ѕерейти ~Ќачалоѕечатићакета;
	 онец≈сли;	
	
	≈сли √лоб.—труктураѕроцессѕечать.ћодульѕроцесс <> "ѕечатные‘ормыƒокументов" “огда
		ѕослеѕечатићакета(»стина);
		√лоб.—труктураѕроцессѕечать = Ќеопределено;
		ѕерейти ~Ќачалоѕечатићакета;
	 онец≈сли;

	≈сли »ндекс“екущей опииѕечати > „исло опийѕечатной‘ормы “огда
		ѕослеѕечатићакета(»стина);
		ѕерейти ~Ќачалоѕечатићакета;
	 онец≈сли;
		
	»детѕечать = »стина;
	
	≈сли »ндекс“екущей опииѕечати = 1 “огда				// если нужно напечатать новую печатную форму
		структураѕечати		= ћассивћакетовѕечати[»ндекс“екущегоћакета];
		объектѕечати		= ћассивѕечатаемыхƒокументов[структураѕечати[" лючќбъект"]];
		документѕечати 		= объектѕечати["ќбъект"];
		списокѕечатных‘орм 	= объектѕечати["ѕечатные‘ормы"];
		видƒокумента		= объектѕечати["¬идƒокумента"];
		текѕечатна€‘орма   	= списокѕечатных‘орм[структураѕечати[" лючћакет"]];	
		тек„исло опий		= текѕечатна€‘орма["„исло опий"];
		√рафическа€ѕечать   = текѕечатна€‘орма["√рафический‘ормат"];
		
		документѕечати.ѕеречитатьƒанные();
		
		им€ѕечатной‘ормы 	= текѕечатна€‘орма["»м€ѕечатной‘ормы"];
		„исло опийѕечатной‘ормы = ?(тек„исло опий = Ќеопределено, 0, ÷елое(тек„исло опий));

		≈сли ќриентаци€—траницы“екущегоћакета = Ќеопределено “огда				// если печатаем макет в обычном режиме
			ориентаци€—траницы од = ?(текѕечатна€‘орма["ќбъект"] = Ќеопределено, текѕечатна€‘орма["ќриентаци€—траницы"], текѕечатна€‘орма["ќбъект"].ќриентаци€—траницы);
			
			результатѕечати  = ћодульѕечати.—формировать“екстовуюѕечатную‘орму(документѕечати, видƒокумента, текѕечатна€‘орма, ориентаци€—траницы од);
			≈сли  »ндекс“екущегоћакета >= 0 “огда							// установка свойства "–аспечатан" у объекта печати
				//≈сли результатѕечати <> 10 » результатѕечати <> 0 “огда
				≈сли результатѕечати <> 10 “огда
					”становить—войство–аспечатан”ќбъекта();
				 онец≈сли;
				
				≈сли объектѕечати["ќбъект"] <> Ќеопределено » им€ѕечатной‘ормы <> "–еестрƒокументов" “огда			// если документѕечати - объект реального документа
					документѕечати.ѕеречитатьƒанные();	
				 онец≈сли;
			 онец≈сли;
			
		»наче																	// если печатаем макет в принудительно измененной ориентации страницы
			ориентаци€—траницы од = ќриентаци€—траницы“екущегоћакета;
			результатѕечати = ћодульѕечати.—формировать“екстовуюѕечатную‘орму(документѕечати, видƒокумента, текѕечатна€‘орма, ориентаци€—траницы од);		
		 онец≈сли;
	»наче
		результатѕечати = ћодульѕечати. одыќшибокѕечати["Ќетќшибок"];
	 онец≈сли;

	≈сли (им€ѕечатной‘ормы = "—чет‘актура" »ли им€ѕечатной‘ормы = "”ѕƒ") » (Ќе ѕропустить—чет‘актуру) “огда
	  	≈сли Ќе документѕечати.ѕодтвержден() “огда
		  	≈сли Ќе документѕечати.ѕроведен() “огда
		  		√лоб.«адать¬опросѕользователю(—лов DictCatalogsDialogFormsPostDoc, –езультатќтветаќѕроведении);
		  		¬озврат 0;
		  	 онец≈сли;
	  	 онец≈сли;
		
	  	≈сли документѕечати.—чет‘актура = Ќеопределено “огда
	  		ѕропустить—чет‘актуру = »стина;
			ѕослеѕечатићакета(»стина);
			√лоб.¬ывести¬сплывающее—ообщение(—лов DictCatalogsDialogPrintErr);
			ѕерейти ~Ќачалоѕечатићакета;
		 онец≈сли;
	 онец≈сли;

	≈сли результатѕечати = ћодульѕечати. одыќшибокѕечати["Ќетќшибок"] “огда	
		
		режим“естировани€ѕечати = √лоб.ќпределить«начениеЋогической онстанты("“естированиеѕечати");	
		≈сли √рафическа€ѕечать “огда
			√рафическа€ѕечать = ћодульѕечати.√рафическа€‘орма <> Ќеопределено;
		 онец≈сли;
		
		≈сли Ќе √рафическа€ѕечать “огда
			ћодульѕечати.“екстовыйƒокументѕечати.–азмерЎрифта = 20;
		 онец≈сли;
		
		“ипѕринтера = √лоб.гл“екѕеременные онстант.“ипѕринтера;
		≈сли “ипѕринтера = ѕеречислени€.“ипыѕринтеров.HPPCLTEXT.ѕредставление() “огда
			ћодульѕечати.“екстовыйƒокументѕечати.–азмерЎрифта = √лоб.гл“екѕеременные онстант.ѕлотностьЎрифта;
		 онец≈сли;

		≈сли –ежим“естировани€ѕечати “огда						
			
			ƒл€ номер опии = »ндекс“екущей опииѕечати ѕо „исло опийѕечатной‘ормы ÷икл
				ѕуть ‘айлуѕечати = "mnt/sdcard/AgentPlusPictures/_testPrint/_print_N" + —трока(»ндекс“екущегоћакета) + "_" + —трока(номер опии) + "_" + ‘ормат(“екуща€ƒата(), "ƒ‘=HH_mm") + ?(√рафическа€ѕечать, ".html", ".txt");
				≈сли √рафическа€ѕечать “огда
					≈сли ћодульѕечати.√рафическа€‘орма. оличество = Ќеопределено “огда
						‘айлѕечати = Ќовый «апись“екста(ѕуть ‘айлуѕечати, "UTF-16");
						‘айлѕечати.«аписать(ћодульѕечати.√рафическа€‘орма.“екст);
						‘айлѕечати.«акрыть();
					»наче
						ƒл€ —ч = 1 ѕо ћодульѕечати.√рафическа€‘орма. оличество ÷икл
							‘айлѕечати = Ќовый «апись“екста(«аменитьѕодстроку(ѕуть ‘айлуѕечати, ".html", "_" + —трока(—ч) + ".html"), "UTF-16");
							‘айлѕечати.«аписать(ћодульѕечати.√рафическа€‘орма[—ч-1]);
							‘айлѕечати.«акрыть();
						 онец÷икла;
					 онец≈сли;
				»наче
					ѕечать.Ќапечатать¬‘айл(ћодульѕечати.“екстовыйƒокументѕечати, ѕуть ‘айлуѕечати);
				 онец≈сли;
				»ндекс“екущей опииѕечати = »ндекс“екущей опииѕечати + 1;
			 онец÷икла;
			ћодульѕечати.√рафическа€‘орма = Ќеопределено;
			ѕослеѕечатићакета(»стина);
	
		»наче

			“ипѕринтера = √лоб.гл“екѕеременные онстант.“ипѕринтера;
			≈сли “ипѕринтера = ѕеречислени€.“ипыѕринтеров.“ермо58.ѕредставление() »ли “ипѕринтера = ѕеречислени€.“ипыѕринтеров.“ермо80.ѕредставление() “огда
				типѕринтера = "STAR_MICRONICS";
			»наче
				типѕринтера = √лоб.гл“екѕеременные онстант.“ипѕринтера;
			 онец≈сли;
			
			≈сли √лоб.гл“екѕеременные онстант.ѕечать„ерез“екстовыйƒокумент » √лоб.гл“екѕеременные онстант.¬ариантѕечати = 0 “огда
			
				ќсновнойќбмен 	 = √лоб.ѕолучитьЁлемент—правочникаƒл€ онстанты( онстанты.ќсновна€Ќастройкаќбмена.ѕолучить(), "Ќастройкиќбмена");
				ѕуть ‘айлуќбмена = ќсновнойќбмен. аталогќбмена;
				√лоб.ƒополнить—леш¬ѕуть(ѕуть ‘айлуќбмена);
				≈сли ќсновнойќбмен = Ќеопределено “огда					
				
					√лоб.¬ывести¬сплывающее—ообщение(—лов DictCatalogsMessageBoxNoExchangeSettings);					
				
				»наче					
					ѕуть ‘айлуѕечати = ѕуть ‘айлуќбмена;					
					≈сли Ќе ‘—.‘айл—уществует(ѕуть ‘айлуѕечати) “огда						
						√лоб.¬ывести¬сплывающее—ообщение(—лов DictCatalogsMessageBoxNoExchangeSettingsPath);						
					»наче
					
						ѕуть ‘айлуѕечати = ѕуть ‘айлуќбмена +  + ?(√рафическа€ѕечать, "print.html", "print.txt");

						ƒл€ номер опии = »ндекс“екущей опииѕечати ѕо „исло опийѕечатной‘ормы ÷икл												
							»ндекс“екущей опииѕечати = »ндекс“екущей опииѕечати + 1;
							≈сли √рафическа€ѕечать “огда
								≈сли ћодульѕечати.√рафическа€‘орма. оличество = Ќеопределено “огда
									‘айлѕечати = Ќовый «апись“екста(ѕуть ‘айлуѕечати, "UTF-16");
									‘айлѕечати.«аписать(ћодульѕечати.√рафическа€‘орма.“екст);
									‘айлѕечати.«акрыть();
								»наче
									ƒл€ —ч = 1 ѕо ћодульѕечати.√рафическа€‘орма. оличество ÷икл
										‘айлѕечати = Ќовый «апись“екста(«аменитьѕодстроку(ѕуть ‘айлуѕечати, ".html", "_" + —трока(—ч) + ".html"), "UTF-16");
										‘айлѕечати.«аписать(ћодульѕечати.√рафическа€‘орма[—ч-1]);
										‘айлѕечати.«акрыть();
									 онец÷икла;
								 онец≈сли;
							»наче
								ѕечать.Ќапечатать¬‘айл(ћодульѕечати.“екстовыйƒокументѕечати, ѕуть ‘айлуѕечати);
							 онец≈сли;
							Bluetoothћенеджер.ѕередать‘айл(ѕуть ‘айлуѕечати);
						 онец÷икла;
						
						ѕослеѕечатићакета(»стина);

						ѕерейти ~Ќачалоѕечатићакета;
					 онец≈сли;
					
				 онец≈сли;
				
			»наче≈сли √лоб.гл“екѕеременные онстант.ѕечать„ерез¬нешнееѕриложение “огда
			
				≈сли √рафическа€ѕечать “огда

					ѕуть ‘айлуѕечати = "/sdcard/AgentPlus2/UPD_PRN.html";
					‘айлѕечати = Ќовый «апись“екста(ѕуть ‘айлуѕечати, "UTF-16");
					‘айлѕечати.«аписать(ћодульѕечати.√рафическа€‘орма.“екст);
					‘айлѕечати.«акрыть();

					ƒокументѕечати = Ќовый ("HTMLƒокумент");
					ƒокументѕечати.”становить“екст(ћодульѕечати.√рафическа€‘орма.“екст);
					ƒокументѕечати.ѕлотностьѕечати = √лоб.гл“екѕеременные онстант.ѕлотностьѕечати;
					ѕечать.ѕечать„ерез¬нешнееѕриложение(ƒокументѕечати);
					ћодульѕечати.√рафическа€‘орма = Ќеопределено;
				»наче
					ћодульѕечати.“екстовыйƒокументѕечати.ѕлотностьѕечати = √лоб.гл“екѕеременные онстант.ѕлотностьѕечати;
					ћодульѕечати.“екстовыйƒокументѕечати. одировка = √лоб.гл“екѕеременные онстант. одировка;
					ѕечать.ѕечать„ерез¬нешнееѕриложение(ћодульѕечати.“екстовыйƒокументѕечати, √лоб.гл“екѕеременные онстант.ѕечатать ак»зображение);
				 онец≈сли;
					
				ѕослеѕечатићакета(»стина);

				ѕерейти ~Ќачалоѕечатићакета;
				
			»наче
			
				≈сли √рафическа€ѕечать “огда
//					ѕуть ‘айлуѕечати = "sdcard/AgentPlus/Report.html";
					ѕуть ‘айлуѕечати = √лоб.—формироватьѕуть ‘айлуƒокумента("Temp.html", »стина);
					
					≈сли ‘—.‘айл—уществует(ѕуть ‘айлуѕечати) “огда
						‘—.”далить‘айл(ѕуть ‘айлуѕечати);	
					 онец≈сли;	
					
					≈сли ћодульѕечати.√рафическа€‘орма. оличество = Ќеопределено “огда
						‘айлѕечати = Ќовый «апись“екста(ѕуть ‘айлуѕечати, "UTF-16");
						‘айлѕечати.«аписать(ћодульѕечати.√рафическа€‘орма.“екст);
						‘айлѕечати.«акрыть();
						ƒокумент = Ќовый("HTMLƒокумент");
						ƒокумент.”становитьURL("file:" + ѕуть ‘айлуѕечати);
						результатќтправкиЌаѕечать = ѕечать.Ќапечатать(ƒокумент, типѕринтера, ѕараметры—оединени€);
					»наче
					
						ƒл€ —ч = 1 ѕо ћодульѕечати.√рафическа€‘орма. оличество ÷икл
							‘айлѕечати = Ќовый «апись“екста(«аменитьѕодстроку(ѕуть ‘айлуѕечати, ".html", "_" + —трока(—ч) + ".html"), "UTF-16");
							‘айлѕечати.«аписать(ћодульѕечати.√рафическа€‘орма[—ч-1]);
							‘айлѕечати.«акрыть();
							ƒокумент = Ќовый("HTMLƒокумент");
							ƒокумент.”становитьURL("file:" + «аменитьѕодстроку(ѕуть ‘айлуѕечати, ".html", "_" + —трока(—ч) + ".html"));
							результатќтправкиЌаѕечать = ѕечать.Ќапечатать(ƒокумент, типѕринтера, ѕараметры—оединени€);
						 онец÷икла;

					 онец≈сли;
					ћодульѕечати.√рафическа€‘орма = Ќеопределено;
				»наче
					результатќтправкиЌаѕечать = ѕечать.Ќапечатать(ћодульѕечати.“екстовыйƒокументѕечати, типѕринтера, ѕараметры—оединени€);
					
			//		 од дл€ тестировани€ печати !!!Ќ≈ ”ƒјЋя“№!!!
//					//»м€‘айла = "mnt/sdcard/AgentPlusPictures/0_Print_1.txt";
//					»м€‘айла = "AgentPlusPrint/0_Print_1.txt";
//					ѕечать.Ќапечатать¬‘айл(ћодульѕечати.“екстовыйƒокументѕечати, »м€‘айла);
//					–езультатќтправкиЌаѕечать = »стина;
			//		 од дл€ тестировани€ печати !!!Ќ≈ ”ƒјЋя“№!!!		
					
				 онец≈сли;
				
				≈сли результатќтправкиЌаѕечать <> »стина “огда
					√лоб.¬ывести¬сплывающее—ообщение(—лов DictCatalogsDialogPrintError);
				 онец≈сли;
				ѕослеѕечатићакета(Ћожь);
				
			 онец≈сли;					
			
		 онец≈сли;
		
	»наче 
		текстќшибки = "";
		флѕропуститьѕечатьћакета = »стина;
		флѕопробоватьЌапечатать¬ѕортрете = Ћожь;
		
		≈сли результатѕечати = ћодульѕечати. одыќшибокѕечати["ћакетЌеопределен"] “огда
		
			текстќшибки = —лов DictCatalogPrintErrorNullPrintForm + ". " + —лов DictCatalogPrintFormMissing + ".";
			
		»наче≈сли результатѕечати = ћодульѕечати. одыќшибокѕечати["ЌеЌайденаѕроцедураѕечатићакета"] “огда
		
			текстќшибки = —лов DictCatalogPrintErrorNotFoundPrintForm + ". " + —лов DictCatalogPrintFormMissing + ": """ + текѕечатна€‘орма["ѕредставление"] + """.";
			
		»наче≈сли результатѕечати = ћодульѕечати. одыќшибокѕечати["ѕринтерЌеѕоддерживаетѕечатьƒл€ќриентации—траницы"] “огда
		
			ориентаци€—траницы»м€ = ћодульѕечати.ќриентаци€—траниц[ориентаци€—траницы од]["»м€"];
			флѕопробоватьЌапечатать¬ѕортрете = Ћожь;
			≈сли ориентаци€—траницы»м€ = ћодульѕечати.ќриентаци€ѕортрет “огда
				текстќшибки = —лов DictCatalogPrintErrorPrinterNotSupportedInOrientationPortrait + ".";
			»наче≈сли ориентаци€—траницы»м€ = ћодульѕечати.ќриентаци€Ћандшафт “огда
				текстќшибки = —лов DictCatalogPrintErrorPrinterNotSupportedInOrientationLandscape + ".";
				флѕропуститьѕечатьћакета = Ћожь;
				флѕопробоватьЌапечатать¬ѕортрете = »стина;				
			»наче
				текстќшибки =  —лов DictCatalogPrintErrorPrinterNotSupportedInOrientation + " """ + ћодульѕечати.ќриентаци€—траниц[ориентаци€—траницы од]["ѕредставление"] + """.";
			 онец≈сли;
		
		»наче≈сли результатѕечати = ћодульѕечати. одыќшибокѕечати["ЌеЌайденаѕроцедураѕечатићакетаƒл€ќриентации—траницы"] “огда			
			текстќшибки = —лов DictCatalogPrintErrorNotFoundPrintFormInOrientation + " """ + ћодульѕечати.ќриентаци€—траниц[ориентаци€—траницы од]["ѕредставление"] + " "" (" + текѕечатна€‘орма["ѕредставление"] + ").";
		
		»наче≈сли результатѕечати = ћодульѕечати. одыќшибокѕечати["ћакетЌеѕоддерживаетѕечатьƒл€ѕринтера"] “огда
			“ипѕринтера = √лоб.гл“екѕеременные онстант.“ипѕринтера;
			≈сли “ипѕринтера = ѕеречислени€.“ипыѕринтеров.“ермо58.ѕредставление() 
				»ли “ипѕринтера = ѕеречислени€.“ипыѕринтеров.“ермо80.ѕредставление() 
					»ли “ипѕринтера = ѕеречислени€.“ипыѕринтеров.CPCL.ѕредставление()
						»ли “ипѕринтера = ѕеречислени€.“ипыѕринтеров.ZPL.ѕредставление() 
							»ли “ипѕринтера = ѕеречислени€.“ипыѕринтеров.ESCPOS.ѕредставление() 
								»ли “ипѕринтера = ѕеречислени€.“ипыѕринтеров.ESCPOS80.ѕредставление() “огда
				
				√лоб.¬ывести¬сплывающее—ообщение(—лов DictCatalogPrintTemplate + " """ + текѕечатна€‘орма["ѕредставление"] + """ " + —лов DictCatalogNoPrintTermo + ".");
			
			»наче
				√лоб.¬ывести¬сплывающее—ообщение(—лов DictCatalogPrintTemplate + " """ + текѕечатна€‘орма["ѕредставление"] + """ " + —лов DictCatalogNotSupportntingOnUsingPrinter + ".");			
			 онец≈сли;
		»наче≈сли результатѕечати = ћодульѕечати. одыќшибокѕечати["ћакетЌеѕоддерживаетѕечатьѕустогоƒокумента"] “огда
			√лоб.¬ывести¬сплывающее—ообщение(—лов DictCatalogsDialogFormsNoPrintEmptyDocBegin + " """ + текѕечатна€‘орма["ѕредставление"] + """ " + —лов DictCatalogsDialogFormsNoPrintEmptyDocEnd);
		»наче		
			√лоб.¬ывести¬сплывающее—ообщение("Ќеизвестна€ ошибка.");
//			√лоб.¬ывести¬сплывающее—ообщение(—лов DictCatalogsDialogPrintError + ".");
		 онец≈сли;

		≈сли флѕропуститьѕечатьћакета “огда			
			≈сли текстќшибки <> "" “огда		
				√лоб.¬ывести¬сплывающее—ообщение(текстќшибки);
			 онец≈сли;
			ѕослеѕечатићакета(»стина);
			ѕерейти ~Ќачалоѕечатићакета;
		»наче
			≈сли флѕопробоватьЌапечатать¬ѕортрете “огда		// выдаем окно сообщени€ и пробуем печатать в портретной ориентации
				кнопки = Ќеопределено;
				кнопки[0] = —лов DictCatalogsListFormOK;
				ќбъект—ообщение = √лоб.—ообщениеѕользователю(—лов DictCatalogsMessageBoxWarning, текстќшибки, «апуститьѕечатьћакета¬ѕортретнойќриентации, кнопки);
				¬озврат 0;
			 онец≈сли;
		 онец≈сли;
		
	 онец≈сли;

	¬озврат 0;
 онец‘ункции

ѕроцедура »нициализироватьѕеременныеѕечати()

	»ндекс“екущегоћакета  = 0;
	»ндекс“екущей опииѕечати = 1;
	„исло опийѕечатной‘ормы = 1;

 онецѕроцедуры

‘ункци€ ќкончаниеѕодтверждени€ƒокументовѕечати()
	
	≈стьЌеѕодтвержденные = Ћожь;
	≈сли ƒопѕараметр¬опроса <> Ќеопределено “огда
		ƒл€  аждого ќбъектѕечати »з ƒопѕараметр¬опроса ÷икл
			≈сли Ќе ќбъектѕечати.ѕодтвержден() “огда
				≈стьЌеѕодтвержденные = »стина;
			 онец≈сли;
		 онец÷икла;
	 онец≈сли;
	≈стьЌеѕодтвержденные = Ћожь;
	≈сли Ќе ≈стьЌеѕодтвержденные “огда
		»нициализироватьѕеременныеѕечати();
		ѕриќкончанииѕечатићакета(ћодульѕечати. одыќшибокѕечати["Ќетќшибок"]);		
	»наче
		—писок нопок = Ќеопределено;
		—писок нопок[1] = —лов DictCatalogsDialogFormsRepeat;
		—писок нопок[2] = —лов DictCatalogsDialogFormsProceed;
		ќбъект—ообщение = √лоб.«адать¬опросѕользователю_Ќовый(—лов DictCatalogsDialogFormsNoPrint, ¬ыполнитьѕодтверждениеƒокументов, —писок нопок);
	 онец≈сли;
	√лоб.»детќбмен = Ћожь;
	
	¬озврат 0;
 онец‘ункции

// ‘ункци€ запускает процесс обмена по заданным документам
//
‘ункци€ ¬ыполнитьѕодтверждениеƒокументов(«начениеќтвета)
	
	ќбъект—ообщение = Ќеопределено;
	≈сли «начениеќтвета = 1 “огда
		√лоб.«апуститьѕроцесс¬ыгрузки(»стина, Ќеопределено, Ќеопределено, ќкончаниеѕодтверждени€ƒокументовѕечати, Ќеопределено, »стина, ƒопѕараметр¬опроса);
	 онец≈сли;
	
	¬озврат 0;
 онец‘ункции

// ‘ункци€ запускает процесс проведени€ по заданным документам
//
‘ункци€ ¬ыполнитьѕроведениеƒокументов(«начениеќтвета)
	
	ќбъект—ообщение = Ќеопределено;
	¬сеƒокументыѕровелись = »стина;
	≈сли «начениеќтвета = 1 “огда
		≈сли ƒопѕараметр¬опроса <> Ќеопределено “огда
			ƒл€  аждого ƒокумент—писка »з ƒопѕараметр¬опроса ÷икл
				¬сеƒокументыѕровелись = ƒокумент—писка.ѕровести() » ¬сеƒокументыѕровелись;
			 онец÷икла;
		 онец≈сли;
		≈сли ¬сеƒокументыѕровелись “огда
			¬ыполнитьѕечатьƒокументов();
		»наче
			√лоб.¬ывести¬сплывающее—ообщение(—лов DictCatalogsMessageBoxPrintCancel);
		 онец≈сли;
		
		≈сли √лоб.ћодуль∆урнала <> Ќеопределено “огда
			√лоб.ћодуль∆урнала.ќбновить—писокƒокументов(ѕеречислени€.¬идыƒокументов.–еализаци€.ѕредставление());
		 онец≈сли;
	»наче
		√лоб.¬ывести¬сплывающее—ообщение(—лов DictCatalogsMessageBoxErrPostPrint);
	 онец≈сли;
	
	¬озврат 0;
 онец‘ункции

// ‘ункци€ заполн€ет список макетов дл€ печати, 
// провер€ет корректность документов печати
// запускает печать в случае корректности всех параметров
‘ункци€ ¬ыполнитьѕечатьƒокументов()
	
	—писокƒокументовѕодтверждени€ = Ќеопределено;
	—писокƒокументовЌеѕроведенных = Ќеопределено;
	»ндексЌепроведенных = 0;
	»ндекс = 0;
	
	≈сли √лоб.—труктураѕроцессѕечать <> Ќеопределено “огда
		≈сли √лоб.—труктураѕроцессѕечать.ћодульѕроцесс <> "ѕечатные‘ормыƒокументов" “огда
			√лоб.¬ывести¬сплывающее—ообщение(—лов DictCatalogsMessageBoxIsPrint);
			¬озврат 0;
		 онец≈сли;
	 онец≈сли;
	
	√лоб.—труктураѕроцессѕечать.ћодульѕроцесс = "ѕечатные‘ормыƒокументов";
	√лоб.—труктураѕроцессѕечать.ѕроцессѕечать = »стина;

	≈сли Ќе ‘ормаћодул€["фл–аздел€ть—траницы"].ќтмечен “огда
		«начениеќтступа = „исло(‘ормаћодул€["ѕоле¬вода оличествоќтступов"].“екст);
		≈сли «начениеќтступа < 0 »ли «начениеќтступа > 10 “огда
			√лоб.¬ывести¬сплывающее—ообщение(—лов DictCatalogsDialogFormsQtPageDif);
			¬озврат 0;
		 онец≈сли;
	 онец≈сли;
	
	ѕараметры—оединени€ = √лоб.«аполнитьЌастройкиѕринтера();
	
	«аписать онстанты();
	
	¬озврат 0 _≈сли ѕараметры—оединени€ = Ќеопределено;
	
	индексћассивѕечати  = 0;
	ћассивћакетовѕечати = Ќеопределено;
	≈сли ћассивѕечатаемыхƒокументов <> Ќеопределено “огда
		ƒл€  аждого тек»дЁлементаѕечати, текЁлементѕечати »з ћассивѕечатаемыхƒокументов ÷икл
			¬ыводитьƒанныеѕо““Ќ = Ћожь;
			объектѕечати = ћассивѕечатаемыхƒокументов[тек»дЁлементаѕечати]["ќбъект"];
			списокѕечатных‘орм = ћассивѕечатаемыхƒокументов[тек»дЁлементаѕечати]["ѕечатные‘ормы"];
			≈сли списокѕечатных‘орм = Ќеопределено “огда
				представлениеƒокумента = "";
				≈сли текЁлементѕечати["ѕредставление"] = Ќеопределено “огда
					представлениеƒокумента = √лоб.—формироватьѕредставлениеƒокумента(текЁлементѕечати["ќбъект"], текЁлементѕечати["¬идƒокумента"]);
				»наче
					представлениеƒокумента = текЁлементѕечати["ѕредставление"];
				 онец≈сли;
				√лоб.¬ывести¬сплывающее—ообщение(—лов DictCatalogsDialogFormsForDoc + представлениеƒокумента + "' " + —лов DictCatalogsMessageBoxNotFoundFormPrint + "!");
				¬озврат 0;
			»наче
				
				 лючћакета“орг12 = Ќеопределено;
				‘л¬ыводитьƒанныеѕо““Ќ = Ћожь;
				
				ћассивƒокументов¬ыгрузки = Ќовый ("ћассив");
				
				ƒл€  аждого ключћакет, текѕечатна€‘орма »з списокѕечатных‘орм ÷икл
					≈сли текѕечатна€‘орма["ќтмечен"] “огда
						// ѕровер€ем все ли документы из списка подтверждены,
						// если есть неподтвержденные провер€ем есть ли непроведенные
						им€ѕечатной‘ормы = текѕечатна€‘орма["»м€ѕечатной‘ормы"];
						≈сли им€ѕечатной‘ормы = "—чет‘актура" »ли им€ѕечатной‘ормы = "”ѕƒ" “огда
							≈сли (Ќе объектѕечати.ѕодтвержден()) “огда
								≈сли (Ќе объектѕечати.ѕроведен()) “огда
									—писокƒокументовЌеѕроведенных[»ндексЌепроведенных] = объектѕечати;
									»ндексЌепроведенных = »ндексЌепроведенных + 1;
								»наче
									≈сли ћассивƒокументов¬ыгрузки.»ндекс(объектѕечати) = -1 “огда
										ћассивƒокументов¬ыгрузки.ƒобавить(объектѕечати);
										—писокƒокументовѕодтверждени€[»ндекс] = объектѕечати;
										≈сли объектѕечати.—чет‘актура <> Ќеопределено “огда
											—писокƒокументовѕодтверждени€[»ндекс + 1] = объектѕечати.—чет‘актура;
										 онец≈сли;
									 онец≈сли;
									»ндекс = »ндекс + 2;
								 онец≈сли;
							 онец≈сли;
						»наче≈сли им€ѕечатной‘ормы = "““Ќ" “огда
							‘л¬ыводитьƒанныеѕо““Ќ = »стина;
						»наче≈сли им€ѕечатной‘ормы = "“орг12" “огда
							 лючћакета“орг12 = ключћакет;
						 онец≈сли;
//						
						// заполн€ем список макетов, которые необходимо распечатать
						структура лючейѕечати = Ќеопределено;
						структура лючейѕечати[" лючќбъект"] = тек»дЁлементаѕечати;
						структура лючейѕечати[" лючћакет"]  = ключћакет;
						ћассивћакетовѕечати[индексћассивѕечати] = структура лючейѕечати;
						индексћассивѕечати = индексћассивѕечати + 1;
						
					 онец≈сли;
				 онец÷икла;
				
				≈сли ‘л¬ыводитьƒанныеѕо““Ќ »  лючћакета“орг12 <> Ќеопределено “огда
				
					ћассивѕечатаемыхƒокументов[тек»дЁлементаѕечати]["ѕечатные‘ормы"][ лючћакета“орг12]["¬ыводитьƒанныеѕо““Ќ"] = »стина;
					
				 онец≈сли;
				
			 онец≈сли;
		 онец÷икла;
	 онец≈сли;
	»ндекс = 0;
	≈сли Ќе √лоб.„исла–авны(»ндексЌепроведенных, 0, 0) “огда
		// если есть непроведенные среди неподтвержденных, их необходимо провести
		// дл€ получени€ далее подтверждени€
		ƒопѕараметр¬опроса = —писокƒокументовЌеѕроведенных;
		ќбъект—ообщение = √лоб.«адать¬опросѕользователю_Ќовый(—лов DictCatalogsMessageBoxPrintPost, ¬ыполнитьѕроведениеƒокументов);
		
	»наче
		
		≈сли √лоб.„исла–авны(»ндекс, 0, 0) “огда
			»нициализироватьѕеременныеѕечати();
			ѕропустить—чет‘актуру = Ћожь;
			≈сли индексћассивѕечати > 0 “огда
				≈сли √лоб.гл“екѕеременные онстант.ѕечать„ерез“екстовыйƒокумент » индексћассивѕечати > 1 “огда
					√лоб.¬ывести¬сплывающее—ообщение(—лов DictCatalogPrintErr);
				»наче
					ѕриќкончанииѕечатићакета(ћодульѕечати. одыќшибокѕечати["Ќетќшибок"]);
				 онец≈сли;
			»наче
				‘ормаћодул€.«акрытьќк();
			 онец≈сли;
		»наче
			ƒопѕараметр¬опроса = —писокƒокументовѕодтверждени€;
			ќбъект—ообщение = √лоб.«адать¬опросѕользователю_Ќовый(—лов DictCatalogCallsExchForPrint, ¬ыполнитьѕодтверждениеƒокументов);
		 онец≈сли;
	
	 онец≈сли;
	
	¬озврат 0;
 онец‘ункции

‘ункци€ ћеню_ѕечать_ѕриЌажатии()		
	
	// ѕровер€ем если режим тестировани€ печати, то очищаем папку тестовых файлов печати
	–ежим“естировани€ѕечати = √лоб.ќпределить«начениеЋогической онстанты("“естированиеѕечати");
	≈сли –ежим“естировани€ѕечати “огда
		
		ѕуть  аталогу‘айловѕечати = "mnt/sdcard/AgentPlusPictures/_testPrint";
		≈сли ‘—.‘айл—уществует(ѕуть  аталогу‘айловѕечати) “огда
			‘—.”далитьѕапку(ѕуть  аталогу‘айловѕечати);
		 онец≈сли;
		‘—.—оздатьѕапку(ѕуть  аталогу‘айловѕечати);
		
	 онец≈сли;
	¬ыполнитьѕечатьƒокументов();
	
	¬озврат 0;	
 онец‘ункции

‘ункци€ ћеню_Ќастройки_ѕриЌажатии()		
	
	√лоб.ћодуль∆урнала.Ќастройкиѕри¬ыборе("ќткрытьѕечать");
	
	¬озврат 0;	
 онец‘ункции

ѕроцедура Ќастроитьћеню()
	
	‘ормаћодул€.ћеню = Ќовый("ћеню‘ормы");
	
	кнопкаћеню = Ќовый(" нопкаѕанелићеню", —лов DictConstPrint);
	кнопкаћеню.”становитьѕриЌажатии(ћеню_ѕечать_ѕриЌажатии);
	‘ормаћодул€.ћеню.ƒобавить нопку("ѕечать", кнопкаћеню);
	
	кнопкаћеню = Ќовый(" нопкаѕанелићеню", —лов DictFormMenuSettings);
	кнопкаћеню.”становитьѕриЌажатии(ћеню_Ќастройки_ѕриЌажатии);		
	‘ормаћодул€.ћеню.ƒобавить нопку("Ќастройки", кнопкаћеню);
	
	кнопкаћеню = Ќовый(" нопкаѕанелићеню", —лов DictFormMenuClose);
	кнопкаћеню.”становитьѕриЌажатии(ћеню_«акрыть_ѕриЌажатии);		
	‘ормаћодул€.ћеню.ƒобавить нопку("«акрыть", кнопкаћеню);

 онецѕроцедуры

//------- конец ћ≈Ќё ‘ќ–ћџ -------
///////////////////////////////////////////

ѕроцедура ќбновить—тилиЁлементов(_ѕерерисоватьЁлементы‘ормы = »стина) Ёкспорт
	
	≈сли ќбновить—тили “огда
		«аполнитьƒанные‘ормы();					// если изменились настройки стилей, то размеры элементов формы могли изменитьс€
	 онец≈сли;
	
	√лоб.ѕрименить—тили(‘ормаћодул€);
	
	≈сли _ѕерерисоватьЁлементы‘ормы “огда
		√лоб.ѕереместитьЁлементыѕо¬ертикали(‘ормаћодул€, ƒанные‘ормы);
	 онец≈сли;

 онецѕроцедуры

ѕроцедура ”становить«начени€ѕараметров(_ѕараметры)

	–езультат = 0;
	«акрытьЅезѕроверок = Ћожь;	
	ћассивѕечатаемыхƒокументов = Ќеопределено;	

	текЌе«акрывать‘орму = _ѕараметры["Ќе«акрывать‘орму"];
	Ќе«акрывать‘орму = ?(текЌе«акрывать‘орму = Ќеопределено, Ќе«акрывать‘орму, текЌе«акрывать‘орму);
	
	ќбъект = Ќеопределено;
	ќбъект = _ѕараметры["ќбъект"];

	ƒобавитьќбъектѕечати¬—писок(ќбъект);

 онецѕроцедуры

// если форма не будет закрыватьс€ (Ќе«акрывать‘орму = 1), тогда при повторном показе формы нужно вызывать данную ф-цию
//
ѕроцедура »зменитьƒанныећодул€(_ѕараметры) Ёкспорт

	”становить«начени€ѕараметров(_ѕараметры);	

 онецѕроцедуры

ѕроцедура ЌастроитьЁлементы‘ормы();
	
//	‘ормаћодул€["ѕоле¬водаѕредставление"].”становить—троковый‘ормат(255);

 онецѕроцедуры

ѕроцедура ѕодключитьќбработчики()

	‘ормаћодул€["ƒеревоѕечатные‘ормы"].”становитьѕриўелчкеЌаячейке(ƒеревоѕечатные‘ормы_ѕриЌажатииѕоячейке);	
	‘ормаћодул€["ƒеревоѕечатные‘ормы"].”становитьѕриƒвойномўелчкеЌаячейке(ƒеревоѕечатные‘ормы_ѕриƒвойномЌажатииѕоячейке);	
	‘ормаћодул€["ƒеревоѕечатные‘ормы"].”становитьѕри”держании(ƒеревоѕечатные‘ормы_ѕри”держании);	
	‘ормаћодул€["фл–аздел€ть—траницы"].”становитьѕриЌажатии(ѕриЌажатииЌа‘лажок);

 онецѕроцедуры

ѕроцедура »нициализировать‘орму()

	Ќастроить“аблицы(»стина); 		
	ЌастроитьЁлементы‘ормы();	
	ѕодключитьќбработчики();		

 онецѕроцедуры

‘ункци€ ‘орма_ѕри»нициализации()

	√лоб.ћодуль–абота—‘ормами.ƒобавитьЁлементыѕо¬ертикали(‘ормаћодул€, ƒанные‘ормы);
	»нициализировать‘орму();
	ќбновить—тилиЁлементов(Ћожь);
	
	≈сли √лоб.ѕолучитьћодуль("ѕечатные‘ормыƒокументов") = Ќеопределено “огда
		√лоб.ƒобавитьћодуль(»дентификаторћодул€, Ётотћодуль);
	 онец≈сли;
	
	—оздать онтекстноећенюƒерева();
	Ќастроитьћеню();

	ќбновить—осто€ние‘ормы(); 
	
	‘ормаћодул€.“екст = —лов DictConstPrint;
	
	¬озврат 0;
 онец‘ункции

‘ункци€ ‘орма_ѕри—менеќриентацииЁкрана(ориентаци€)

	ќриентаци€Ёкрана = ?(ориентаци€ = 0, ѕеречислени€.ќриентаци€Ёкрана.ѕортрет, ѕеречислени€.ќриентаци€Ёкрана.Ћандшафт);
	√лоб.ћодуль–абота—‘ормами.ѕереместитьЁлементыѕо¬ертикали(‘ормаћодул€, ƒанные‘ормы);
	
	Ќастроить“аблицы(Ћожь);
	”становить¬идимость онтролов();

	¬озврат 0;
 онец‘ункции

‘ункци€ ѕредупредитьќѕечатиƒокумента()
	
	≈сли »детѕечать “огда
		√лоб.¬ывести¬сплывающее—ообщение(—лов DictCatalogsDialogClosePrint);
	 онец≈сли;
	
	¬озврат 0;
 онец‘ункции

// ‘ункци€ записывает константу количества отступов перез закрытием формы
//
‘ункци€ «аписать онстанты()
	
	 онстанты. оличествоќтступов.”становить(÷елое(‘ормаћодул€["ѕоле¬вода оличествоќтступов"].“екст));
	 онстанты.–аздел€ть—траницы.”становить(‘ормаћодул€["фл–аздел€ть—траницы"].ќтмечен);
	
	¬озврат 0;
 онец‘ункции

‘ункци€ ‘орма_ѕри¬ыбореOK()
	
	ѕредупредитьќѕечатиƒокумента();
	
	–езультат = 1;		

	‘ормаћодул€.ѕоказать(0);	
	ќповеститьќ¬ыборе(–езультат);
	ѕропустить—чет‘актуру = Ћожь;
	«аписать онстанты();
	
	¬озврат Ќе«акрывать‘орму;
 онец‘ункции

‘ункци€ ‘орма_ѕри¬ыбореќтмены()
	
	ѕредупредитьќѕечатиƒокумента();
	
	≈сли «акрытьЅезѕроверок “огда	
		‘ормаћодул€.ѕоказать(0);
		ќповеститьќ¬ыборе(–езультат);
		¬озврат Ќе«акрывать‘орму;
	 онец≈сли;

	–езультат = 0;
	
	‘ормаћодул€.ѕоказать(0);
	ќповеститьќ¬ыборе(–езультат);
	ѕропустить—чет‘актуру = Ћожь;
	«аписать онстанты();
	
	¬озврат Ќе«акрывать‘орму;
 онец‘ункции

‘ункци€ ‘орма_ѕриѕоказе()
	
	‘ормаћодул€.”становить–ежимќтображени€‘она(√лоб.гл“екѕеременные онстант.“емаѕриложени€);
	¬идимость‘ормы = »стина;
	ѕечать.”становитьѕриќкончанииѕечати(ѕриќкончанииѕечатићакета);
	
	¬озврат 0;
 онец‘ункции

‘ункци€ ‘орма_ѕри—крытии()
	¬идимость‘ормы = Ћожь;
	¬озврат 0;
 онец‘ункции

// создаЄт полноэкранную форму
//
ѕроцедура —оздать‘орму() Ёкспорт

	‘ормаћодул€ = Ќовый("‘орма");
	‘ормаћодул€.”становитьѕриќк(‘орма_ѕри¬ыбореOK);
	‘ормаћодул€.”становитьѕриќтмене(‘орма_ѕри¬ыбореќтмены);
	‘ормаћодул€.”становитьѕри—менеќриентацииЁкрана(‘орма_ѕри—менеќриентацииЁкрана);		
	‘ормаћодул€.”становитьѕри»нициализацииƒиалога(‘орма_ѕри»нициализации);	
	‘ормаћодул€.”становитьѕриѕоказе(‘орма_ѕриѕоказе);
	‘ормаћодул€.”становитьѕри—крытии(‘орма_ѕри—крытии);
	
	ќриентаци€Ёкрана = √лоб.ќриентаци€Ёкрана;

 онецѕроцедуры

/////////////////////////////////////////////////

ѕропустить—чет‘актуру = Ћожь;
Ќе«акрывать‘орму 	= 0;
«акрытьЅезѕроверок 	= Ћожь;
¬идимость‘ормы 		= Ћожь;
»детѕечать 			= Ћожь;

»м€—правочника = "ѕечатные‘ормыƒокументов";
ћассивѕечатаемыхƒокументов = Ќеопределено;
—прѕечатные‘ормы = Ќовый —правочники[»м€—правочника];
—прѕечатные‘ормыќрганизации = Ќовый —правочники.ѕечатные‘ормыƒокументовќрганизаций;

ѕараметры = ѕолучитьѕараметр();
”становить«начени€ѕараметров(ѕараметры);

»дентификаторћодул€ = √лоб.ѕолучить»дентификаторћодул€("‘орма—писка", Ќеопределено, »м€—правочника);

ћодульѕечати = ќткрытьћодуль(»менаћодулей.√лобальныећодули.ѕечатьƒокументов);

«аполнитьƒанные‘ормы();	
—оздать‘орму();